@startuml

package Extension #AAAAFF {
  class Extension {
    + context: vscode.ExtensionContext
    + addSubscription(subscription: vscode.Disposable): void
  }
}

package Usecase #FFAAAA {
  interface SkaffoldPreviewInterface {
    + disposable(): vscode.Disposable
  }

  class SkaffoldPreviewUsecase {
    - inputPort: SkaffoldPreviewGatewayInputPort
  }

  class SkaffoldProfilePreviewUsecase {
    - inputPort: SkaffoldProfilePreviewGatewayInputPort
  }

  SkaffoldPreviewInterface <|-down- SkaffoldPreviewUsecase
  SkaffoldPreviewInterface <|-down- SkaffoldProfilePreviewUsecase
}

SkaffoldPreviewInterface <-up- Extension

package Gateway #AAFFAA {
  interface SkaffoldPreviewGatewayInputPort {
    + render(panel: vscode.WebviewPanel): void
  }

  class SkaffoldPreviewGateway {
  }

  SkaffoldPreviewGatewayInputPort <-up- SkaffoldPreviewUsecase
  SkaffoldPreviewGatewayInputPort <|-down- SkaffoldPreviewGateway

  class SkaffoldProfilePreviewGateway {

  }

  SkaffoldPreviewGatewayInputPort <-up- SkaffoldProfilePreviewUsecase
  SkaffoldPreviewGatewayInputPort <|-down- SkaffoldProfilePreviewGateway
}

package Domain #FFFFAA {
  class SkaffoldRender {
    + render(): void
    + profileRender(): void
  }
}

package Skaffold #AAAAFF {
  class Skaffold {
    + command: string
    + profile: string[]

    + render(): string
  }
}


@enduml